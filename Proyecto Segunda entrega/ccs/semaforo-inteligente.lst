CCS PCM C Compiler, Version 5.112, 29001               17-nov.-24 18:32

               Filename:   C:\Users\juand\OneDrive\Escritorio\Universidad\8 Semestre\Micro\Corte 3\Proyecto Tercer Corte\Proyecto Segunda entrega\ccs\semaforo-inteligente.lst

               ROM used:   183 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           15 (4%) worst case
               Stack used: 4 locations (2 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   094
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.3
001A:  GOTO   01D
001B:  BTFSC  0C.3
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   04A
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #fuses XT, NOWDT, NOPROTECT, NOLVP
.................... #use delay(clock=4000000)
.................... #use i2c(SLAVE, SDA=PIN_C4, SCL=PIN_C3, address=0x22, FORCE_HW)
.................... 
.................... #define LED_VERDE_IZQ PIN_A0
.................... #define LED_AMARILLO_IZQ PIN_A1
.................... #define LED_ROJO_IZQ PIN_A2
.................... #define LED_VERDE_DER PIN_B7
.................... #define LED_AMARILLO_DER PIN_B6
.................... #define LED_ROJO_DER PIN_B5
.................... 
.................... void apagar_todos_leds() {
....................     output_low(LED_VERDE_IZQ);
0031:  BSF    03.5
0032:  BCF    05.0
0033:  BCF    03.5
0034:  BCF    05.0
....................     output_low(LED_AMARILLO_IZQ);
0035:  BSF    03.5
0036:  BCF    05.1
0037:  BCF    03.5
0038:  BCF    05.1
....................     output_low(LED_ROJO_IZQ);
0039:  BSF    03.5
003A:  BCF    05.2
003B:  BCF    03.5
003C:  BCF    05.2
....................     output_low(LED_VERDE_DER);
003D:  BSF    03.5
003E:  BCF    06.7
003F:  BCF    03.5
0040:  BCF    06.7
....................     output_low(LED_AMARILLO_DER);
0041:  BSF    03.5
0042:  BCF    06.6
0043:  BCF    03.5
0044:  BCF    06.6
....................     output_low(LED_ROJO_DER);
0045:  BSF    03.5
0046:  BCF    06.5
0047:  BCF    03.5
0048:  BCF    06.5
0049:  RETURN
.................... }
.................... 
.................... void encenderLedsPorComando(char comando) {
....................     apagar_todos_leds();  // Apagar todos los LEDs antes de encender los nuevos
*
0054:  CALL   031
.................... 
....................     switch (comando) {
0055:  MOVF   29,W
0056:  XORLW  41
0057:  BTFSC  03.2
0058:  GOTO   063
0059:  XORLW  03
005A:  BTFSC  03.2
005B:  GOTO   06C
005C:  XORLW  01
005D:  BTFSC  03.2
005E:  GOTO   079
005F:  XORLW  07
0060:  BTFSC  03.2
0061:  GOTO   082
0062:  GOTO   08F
....................         case 'A':  // Verde Izquierda, Rojo Derecha
....................             output_high(LED_VERDE_IZQ);
0063:  BSF    03.5
0064:  BCF    05.0
0065:  BCF    03.5
0066:  BSF    05.0
....................             output_high(LED_ROJO_DER);
0067:  BSF    03.5
0068:  BCF    06.5
0069:  BCF    03.5
006A:  BSF    06.5
....................             break;
006B:  GOTO   090
....................         case 'B':  // Amarillo Izquierda, Rojo Derecha
....................             output_high(LED_AMARILLO_IZQ);
006C:  BSF    03.5
006D:  BCF    05.1
006E:  BCF    03.5
006F:  BSF    05.1
....................             output_high(LED_ROJO_DER);
0070:  BSF    03.5
0071:  BCF    06.5
0072:  BCF    03.5
0073:  BSF    06.5
....................             output_high(LED_AMARILLO_DER);
0074:  BSF    03.5
0075:  BCF    06.6
0076:  BCF    03.5
0077:  BSF    06.6
....................             break;
0078:  GOTO   090
....................         case 'C':  // Rojo Izquierda, Verde Derecha
....................             output_high(LED_ROJO_IZQ);
0079:  BSF    03.5
007A:  BCF    05.2
007B:  BCF    03.5
007C:  BSF    05.2
....................             output_high(LED_VERDE_DER);
007D:  BSF    03.5
007E:  BCF    06.7
007F:  BCF    03.5
0080:  BSF    06.7
....................             break;
0081:  GOTO   090
....................         case 'D':  // Rojo Izquierda, Amarillo Derecha
....................             output_high(LED_ROJO_IZQ);
0082:  BSF    03.5
0083:  BCF    05.2
0084:  BCF    03.5
0085:  BSF    05.2
....................             output_high(LED_AMARILLO_IZQ);
0086:  BSF    03.5
0087:  BCF    05.1
0088:  BCF    03.5
0089:  BSF    05.1
....................             output_high(LED_AMARILLO_DER);
008A:  BSF    03.5
008B:  BCF    06.6
008C:  BCF    03.5
008D:  BSF    06.6
....................             break;
008E:  GOTO   090
....................         default:  // Apagar todos si llega un comando inválido
....................             apagar_todos_leds();
008F:  CALL   031
....................             break;
....................     }
.................... }
.................... 
.................... #INT_SSP
.................... void i2c_isr() {
*
004A:  BCF    14.6
004B:  BSF    03.5
004C:  BTFSS  14.0
004D:  GOTO   04C
004E:  BCF    03.5
004F:  MOVF   13,W
0050:  BSF    14.4
0051:  MOVWF  28
....................     char comando = i2c_read();  // Leer un solo carácter enviado por el Arduino
....................     encenderLedsPorComando(comando);  // Encender los LEDs según el comando recibido
0052:  MOVF   28,W
0053:  MOVWF  29
*
0090:  BCF    0C.3
0091:  BCF    0A.3
0092:  BCF    0A.4
0093:  GOTO   01D
.................... }
.................... 
.................... void main() {
0094:  MOVF   03,W
0095:  ANDLW  1F
0096:  MOVWF  03
0097:  MOVLW  FF
0098:  MOVWF  27
0099:  BSF    27.3
009A:  MOVF   27,W
009B:  BSF    03.5
009C:  MOVWF  07
009D:  BCF    03.5
009E:  BSF    27.4
009F:  MOVF   27,W
00A0:  BSF    03.5
00A1:  MOVWF  07
00A2:  MOVLW  22
00A3:  MOVWF  13
00A4:  MOVLW  36
00A5:  BCF    03.5
00A6:  MOVWF  14
00A7:  BSF    03.5
00A8:  BSF    11.0
00A9:  BSF    11.7
00AA:  BSF    1F.0
00AB:  BSF    1F.1
00AC:  BSF    1F.2
00AD:  BCF    1F.3
00AE:  MOVLW  07
00AF:  MOVWF  1C
00B0:  BCF    03.7
....................     enable_interrupts(INT_SSP);   // Habilitar interrupciones I2C
00B1:  BSF    0C.3
....................     enable_interrupts(GLOBAL);   // Habilitar interrupciones globales
00B2:  MOVLW  C0
00B3:  BCF    03.5
00B4:  IORWF  0B,F
.................... 
....................     while (TRUE) {
00B5:  GOTO   0B5
....................         // Espera a que lleguen comandos
....................     }
.................... }
.................... 
00B6:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
