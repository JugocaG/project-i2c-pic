CCS PCM C Compiler, Version 5.112, 29001               10-nov.-24 18:09

               Filename:   C:\Users\juand\OneDrive\Escritorio\Universidad\8 Semestre\Micro\Corte 3\Proyecto primera entrega\ccs\led.lst

               ROM used:   90 words (1%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #fuses XT, NOWDT, NOPROTECT, NOLVP
.................... #use delay(clock=4000000)
.................... #use i2c(SLAVE, SDA=PIN_C4, SCL=PIN_C3, address=0x22, FORCE_HW)  // Dirección esclavo I2C
.................... 
.................... #define PWM_PIN PIN_C2  // Pin CCP1 (PWM1) para controlar el LED
.................... 
.................... void main() {
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  MOVLW  FF
0008:  MOVWF  20
0009:  BSF    20.3
000A:  MOVF   20,W
000B:  BSF    03.5
000C:  MOVWF  07
000D:  BCF    03.5
000E:  BSF    20.4
000F:  MOVF   20,W
0010:  BSF    03.5
0011:  MOVWF  07
0012:  MOVLW  22
0013:  MOVWF  13
0014:  MOVLW  36
0015:  BCF    03.5
0016:  MOVWF  14
0017:  BSF    03.5
0018:  BSF    11.0
0019:  BSF    11.7
001A:  BSF    1F.0
001B:  BSF    1F.1
001C:  BSF    1F.2
001D:  BCF    1F.3
001E:  MOVLW  07
001F:  MOVWF  1C
0020:  BCF    03.7
....................     setup_ccp1(CCP_PWM);       // Configura CCP1 como PWM
0021:  BCF    03.5
0022:  BCF    20.2
0023:  MOVF   20,W
0024:  BSF    03.5
0025:  MOVWF  07
0026:  BCF    03.5
0027:  BCF    07.2
0028:  MOVLW  0C
0029:  MOVWF  17
....................     setup_timer_2(T2_DIV_BY_16, 255, 1);  // Configura Timer2 para PWM a ~490 Hz
002A:  MOVLW  00
002B:  MOVWF  78
002C:  IORLW  06
002D:  MOVWF  12
002E:  MOVLW  FF
002F:  BSF    03.5
0030:  MOVWF  12
.................... 
....................     int brightness = 0;  // Valor de brillo recibido
0031:  BCF    03.5
0032:  CLRF   21
.................... 
....................     while (TRUE) {
....................         if (i2c_poll()) {           // Verifica si hay datos I2C disponibles
0033:  BSF    03.5
0034:  BTFSS  14.0
0035:  GOTO   058
....................             brightness = i2c_read(); // Lee el valor de brillo enviado por el Arduino
0036:  BCF    03.5
0037:  BCF    14.6
0038:  BSF    03.5
0039:  BTFSS  14.0
003A:  GOTO   039
003B:  BCF    03.5
003C:  MOVF   13,W
003D:  BSF    14.4
003E:  MOVWF  21
....................             set_pwm1_duty((long)brightness * 4);  // Ajusta el ciclo de trabajo PWM (0 a 1023)
003F:  CLRF   23
0040:  MOVF   21,W
0041:  MOVWF  22
0042:  RLF    22,F
0043:  RLF    23,F
0044:  RLF    22,F
0045:  RLF    23,F
0046:  MOVLW  FC
0047:  ANDWF  22,F
0048:  RRF    23,F
0049:  RRF    22,F
004A:  RRF    23,F
004B:  RRF    22,F
004C:  RRF    23,F
004D:  MOVF   22,W
004E:  MOVWF  15
004F:  RRF    23,F
0050:  RRF    23,W
0051:  ANDLW  30
0052:  MOVWF  77
0053:  MOVF   17,W
0054:  ANDLW  CF
0055:  IORWF  77,W
0056:  MOVWF  17
0057:  BSF    03.5
....................         }
0058:  GOTO   034
....................     }
.................... }
.................... 
0059:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
